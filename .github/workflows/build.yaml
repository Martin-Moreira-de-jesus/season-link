name: Build Image

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: "Image name"
        required: true
        type: string
      dockerfile_path:
        description: "Dockerfile path"
        required: true
        type: string
      context:
        description: "Context path"
        required: true
        type: string
  workflow_call:
    inputs:
      image_name:
        description: "Image name"
        required: true
        type: string
      dockerfile_path:
        description: "Dockerfile path"
        required: true
        type: string
      context:
        description: "Context path"
        required: true
        type: string

jobs:
  build:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    outputs:
      trivy: ${{ steps.trivy.outputs.results }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ inputs.image_name }}
          tags: |
            latest
            buildcache
            type=ref,event=branch
            type=ref,event=pr
            type=raw,enable=${{ github.event_name == 'pull_request' }},value=${{ github.event.pull_request.head.sha }}
            type=semver,event=tag,pattern={{ version }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile_path }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/${{ inputs.image_name }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/${{ inputs.image_name }}:buildcache,mode=max
      - name: Run Trivy
        if: ${{ github.event_name == 'pull_request' }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}/${{ inputs.image_name }}:latest
          format: table
          output: trivy-results.txt
          exit-code: 0
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Set Trivy Results
        id: trivy
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "results=$(cat trivy-results.txt)" >> "$GITHUB_OUTPUT"

  trivy-results:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    needs: build
    steps:
      - name: Trivy Results
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "${{ needs.build.outputs.trivy }}"
